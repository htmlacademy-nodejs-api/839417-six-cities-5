openapi: 3.1.0
info:
  title: API сервер для учебного проекта "Six sities".
  description: |-
    * Список ресурсов и маршрутов сервера "Six sities".
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0
tags:
  - name: offers
    description: Действия с объявлениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /users/register:
    post:
      tags:
       - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "409":
          description: Пользователь с таким email уже существует.

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизирует пользователя на основе логина и пароля

      requestBody:
        description: Информация для авторизации пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true

      responses:
        "200":
          description: Авторизация завершена успешно. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "400":
          description: Неверный запрос.

        "401":
          description: Неверный пароль.

        "404":
          description: Пользователь с таким логином не существует.

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю.

      responses:
        "200":
          description: Объект пользователя.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'

        "401":
          description: Доступ запрещен.

  /users/logout:
    post:
      tags:
        - users
      summary: Логаут пользователя
      description: Завершает сессию для пользователя

      responses:
        "204":
          description: Логаут успешно выполнен
        "404":
          description: Выполнить логаут не удалось

  /users/{userId}/avatar:
    post:
      tags:
        - users
      summary: Загрузить изображение аватара
      description: Загружает изображение аватара пользователя. Изображение аватара
        должно быть в формате `png` или `jpg`.

components:
  schemas:
    createUer:
      type: object

      properties:
        name:
          type: string
          example: Harry Kane

        email:
          type: string
          example: keks@htmlacademy.ru

        password:
          type: string
          example: 123456

    type: object

    properties:
      id:
        type: string
        example: 6329c3d6a04ab1061c6425ea

      email:
        type: string
        example: keks@htmlacademy.ru
